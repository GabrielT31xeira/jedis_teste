version: '3'

services:
  # Criando o container do servidor WEB
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "80:80"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./:/var/www/html"
    container_name: nginx
    depends_on:
      - php
    networks:
      - jedis_api
  # Criando o container do PHP (Laravel)
  php:
    build:
      context: .
      dockerfile: Dockerfile-php
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - "./:/var/www/html"
    environment:
      - "DB_CONNECTION=pgsql"
      - "DB_HOST=database"
      - "DB_PORT=5432"
      - "DB_DATABASE=app"
      - "DB_USERNAME=app"
      - "DB_PASSWORD=!ChangeMe!"
      - "REDIS_HOST=cache"
      - "REDIS_PORT=6379"
    command: bash -c "composer install && cp .env.example .env && php artisan key:generate && php artisan migrate && php artisan passport:install && php-fpm"
    depends_on:
      - database
      - redis
    networks:
      - jedis_api

  # Criando o banco de dados Postgres
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    container_name: database
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - jedis_api

  # Criando o banco de dados de cache Redis
  redis:
    container_name: cache
    build:
      context: .
      dockerfile: Dockerfile-redis
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - jedis_api

volumes:
  database_data:

networks:
  jedis_api:
